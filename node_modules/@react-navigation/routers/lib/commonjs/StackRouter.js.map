{"version":3,"sources":["StackRouter.tsx"],"names":["StackActions","replace","name","params","type","payload","push","pop","count","popToTop","StackRouter","options","router","BaseRouter","getInitialState","routeNames","routeParamList","initialRouteName","undefined","includes","stale","key","index","routes","getRehydratedState","partialState","state","filter","route","map","length","getStateForRouteNamesChange","Math","min","getStateForRouteFocus","findIndex","r","slice","getStateForAction","action","source","i","target","max","concat","actionCreators"],"mappings":";;;;;;;;AAAA;;AACA;;;;;;;;;;AA2CO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,OAAO,CAACC,IAAD,EAAeC,MAAf,EAAiD;AACtD,WAAO;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,OAAO,EAAE;AAAEH,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AAA5B,KAAP;AACD,GAHyB;;AAI1BG,EAAAA,IAAI,CAACJ,IAAD,EAAeC,MAAf,EAAiD;AACnD,WAAO;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,OAAO,EAAE;AAAEH,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AAAzB,KAAP;AACD,GANyB;;AAO1BI,EAAAA,GAAG,GAAqC;AAAA,QAApCC,KAAoC,uEAApB,CAAoB;AACtC,WAAO;AAAEJ,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAE;AAAEG,QAAAA;AAAF;AAAxB,KAAP;AACD,GATyB;;AAU1BC,EAAAA,QAAQ,GAAoB;AAC1B,WAAO;AAAEL,MAAAA,IAAI,EAAE;AAAR,KAAP;AACD;;AAZyB,CAArB;;;AAeQ,SAASM,WAAT,CAAqBC,OAArB,EAAkD;AAC/D,QAAMC,MAGL,qBACIC,mBADJ;AAGCT,IAAAA,IAAI,EAAE,OAHP;;AAKCU,IAAAA,eAAe,OAAiC;AAAA,UAAhC;AAAEC,QAAAA,UAAF;AAAcC,QAAAA;AAAd,OAAgC;AAC9C,YAAMC,gBAAgB,GACpBN,OAAO,CAACM,gBAAR,KAA6BC,SAA7B,IACAH,UAAU,CAACI,QAAX,CAAoBR,OAAO,CAACM,gBAA5B,CADA,GAEIN,OAAO,CAACM,gBAFZ,GAGIF,UAAU,CAAC,CAAD,CAJhB;AAMA,aAAO;AACLK,QAAAA,KAAK,EAAE,KADF;AAELhB,QAAAA,IAAI,EAAE,OAFD;AAGLiB,QAAAA,GAAG,kBAAW,uBAAX,CAHE;AAILC,QAAAA,KAAK,EAAE,CAJF;AAKLP,QAAAA,UALK;AAMLQ,QAAAA,MAAM,EAAE,CACN;AACEF,UAAAA,GAAG,YAAKJ,gBAAL,cAAyB,uBAAzB,CADL;AAEEf,UAAAA,IAAI,EAAEe,gBAFR;AAGEd,UAAAA,MAAM,EAAEa,cAAc,CAACC,gBAAD;AAHxB,SADM;AANH,OAAP;AAcD,KA1BF;;AA4BCO,IAAAA,kBAAkB,CAACC,YAAD,SAA+C;AAAA,UAAhC;AAAEV,QAAAA,UAAF;AAAcC,QAAAA;AAAd,OAAgC;AAC/D,UAAIU,KAAK,GAAGD,YAAZ;;AAEA,UAAIC,KAAK,CAACN,KAAN,KAAgB,KAApB,EAA2B;AACzB,eAAOM,KAAP;AACD;;AAED,YAAMH,MAAM,GAAGG,KAAK,CAACH,MAAN,CACZI,MADY,CACLC,KAAK,IAAIb,UAAU,CAACI,QAAX,CAAoBS,KAAK,CAAC1B,IAA1B,CADJ,EAEZ2B,GAFY,CAGXD,KAAK,sBAEEA,KAFF;AAGDP,QAAAA,GAAG,EAAEO,KAAK,CAACP,GAAN,cAAgBO,KAAK,CAAC1B,IAAtB,cAA8B,uBAA9B,CAHJ;AAIDC,QAAAA,MAAM,EACJa,cAAc,CAACY,KAAK,CAAC1B,IAAP,CAAd,KAA+BgB,SAA/B,qBAESF,cAAc,CAACY,KAAK,CAAC1B,IAAP,CAFvB,MAGS0B,KAAK,CAACzB,MAHf,IAKIyB,KAAK,CAACzB;AAVX,QAHM,CAAf;;AAiBA,UAAIoB,MAAM,CAACO,MAAP,KAAkB,CAAtB,EAAyB;AACvB,cAAMb,gBAAgB,GACpBN,OAAO,CAACM,gBAAR,KAA6BC,SAA7B,GACIP,OAAO,CAACM,gBADZ,GAEIF,UAAU,CAAC,CAAD,CAHhB;AAKAQ,QAAAA,MAAM,CAACjB,IAAP,CAAY;AACVe,UAAAA,GAAG,YAAKJ,gBAAL,cAAyB,uBAAzB,CADO;AAEVf,UAAAA,IAAI,EAAEe,gBAFI;AAGVd,UAAAA,MAAM,EAAEa,cAAc,CAACC,gBAAD;AAHZ,SAAZ;AAKD;;AAED,aAAO;AACLG,QAAAA,KAAK,EAAE,KADF;AAELhB,QAAAA,IAAI,EAAE,OAFD;AAGLiB,QAAAA,GAAG,kBAAW,uBAAX,CAHE;AAILC,QAAAA,KAAK,EAAEC,MAAM,CAACO,MAAP,GAAgB,CAJlB;AAKLf,QAAAA,UALK;AAMLQ,QAAAA;AANK,OAAP;AAQD,KAzEF;;AA2ECQ,IAAAA,2BAA2B,CAACL,KAAD,SAAwC;AAAA,UAAhC;AAAEX,QAAAA,UAAF;AAAcC,QAAAA;AAAd,OAAgC;AACjE,YAAMO,MAAM,GAAGG,KAAK,CAACH,MAAN,CAAaI,MAAb,CAAoBC,KAAK,IACtCb,UAAU,CAACI,QAAX,CAAoBS,KAAK,CAAC1B,IAA1B,CADa,CAAf;;AAIA,UAAIqB,MAAM,CAACO,MAAP,KAAkB,CAAtB,EAAyB;AACvB,cAAMb,gBAAgB,GACpBN,OAAO,CAACM,gBAAR,KAA6BC,SAA7B,IACAH,UAAU,CAACI,QAAX,CAAoBR,OAAO,CAACM,gBAA5B,CADA,GAEIN,OAAO,CAACM,gBAFZ,GAGIF,UAAU,CAAC,CAAD,CAJhB;AAMAQ,QAAAA,MAAM,CAACjB,IAAP,CAAY;AACVe,UAAAA,GAAG,YAAKJ,gBAAL,cAAyB,uBAAzB,CADO;AAEVf,UAAAA,IAAI,EAAEe,gBAFI;AAGVd,UAAAA,MAAM,EAAEa,cAAc,CAACC,gBAAD;AAHZ,SAAZ;AAKD;;AAED,+BACKS,KADL;AAEEX,QAAAA,UAFF;AAGEQ,QAAAA,MAHF;AAIED,QAAAA,KAAK,EAAEU,IAAI,CAACC,GAAL,CAASP,KAAK,CAACJ,KAAf,EAAsBC,MAAM,CAACO,MAAP,GAAgB,CAAtC;AAJT;AAMD,KApGF;;AAsGCI,IAAAA,qBAAqB,CAACR,KAAD,EAAQL,GAAR,EAAa;AAChC,YAAMC,KAAK,GAAGI,KAAK,CAACH,MAAN,CAAaY,SAAb,CAAuBC,CAAC,IAAIA,CAAC,CAACf,GAAF,KAAUA,GAAtC,CAAd;;AAEA,UAAIC,KAAK,KAAK,CAAC,CAAX,IAAgBA,KAAK,KAAKI,KAAK,CAACJ,KAApC,EAA2C;AACzC,eAAOI,KAAP;AACD;;AAED,+BACKA,KADL;AAEEJ,QAAAA,KAFF;AAGEC,QAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAac,KAAb,CAAmB,CAAnB,EAAsBf,KAAK,GAAG,CAA9B;AAHV;AAKD,KAlHF;;AAoHCgB,IAAAA,iBAAiB,CAACZ,KAAD,EAAQa,MAAR,EAAgB5B,OAAhB,EAAyB;AACxC,YAAM;AAAEK,QAAAA;AAAF,UAAqBL,OAA3B;;AAEA,cAAQ4B,MAAM,CAACnC,IAAf;AACE,aAAK,SAAL;AAAgB;AACd,kBAAMkB,KAAK,GAAGiB,MAAM,CAACC,MAAP,GACVd,KAAK,CAACH,MAAN,CAAaY,SAAb,CAAuBC,CAAC,IAAIA,CAAC,CAACf,GAAF,KAAUkB,MAAM,CAACC,MAA7C,CADU,GAEVd,KAAK,CAACJ,KAFV;;AAIA,gBAAIA,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,qBAAO,IAAP;AACD;;AAED,kBAAM;AAAEpB,cAAAA,IAAF;AAAQmB,cAAAA,GAAR;AAAalB,cAAAA;AAAb,gBAAwBoC,MAAM,CAAClC,OAArC;;AAEA,gBAAI,CAACqB,KAAK,CAACX,UAAN,CAAiBI,QAAjB,CAA0BjB,IAA1B,CAAL,EAAsC;AACpC,qBAAO,IAAP;AACD;;AAED,qCACKwB,KADL;AAEEH,cAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAaM,GAAb,CAAiB,CAACD,KAAD,EAAQa,CAAR,KACvBA,CAAC,KAAKnB,KAAN,GACI;AACED,gBAAAA,GAAG,EAAEA,GAAG,KAAKH,SAAR,GAAoBG,GAApB,aAA6BnB,IAA7B,cAAqC,uBAArC,CADP;AAEEA,gBAAAA,IAFF;AAGEC,gBAAAA,MAAM,EACJa,cAAc,CAACd,IAAD,CAAd,KAAyBgB,SAAzB,qBAESF,cAAc,CAACd,IAAD,CAFvB,MAGSC,MAHT,IAKIA;AATR,eADJ,GAYIyB,KAbE;AAFV;AAkBD;;AAED,aAAK,MAAL;AACE,cAAIF,KAAK,CAACX,UAAN,CAAiBI,QAAjB,CAA0BoB,MAAM,CAAClC,OAAP,CAAeH,IAAzC,CAAJ,EAAoD;AAClD,qCACKwB,KADL;AAEEJ,cAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,GAAc,CAFvB;AAGEC,cAAAA,MAAM,EAAE,CACN,GAAGG,KAAK,CAACH,MADH,EAEN;AACEF,gBAAAA,GAAG,EACDkB,MAAM,CAAClC,OAAP,CAAegB,GAAf,KAAuBH,SAAvB,aACOqB,MAAM,CAAClC,OAAP,CAAeH,IADtB,cAC8B,uBAD9B,IAEIqC,MAAM,CAAClC,OAAP,CAAegB,GAJvB;AAKEnB,gBAAAA,IAAI,EAAEqC,MAAM,CAAClC,OAAP,CAAeH,IALvB;AAMEC,gBAAAA,MAAM,EACJa,cAAc,CAACuB,MAAM,CAAClC,OAAP,CAAeH,IAAhB,CAAd,KAAwCgB,SAAxC,qBAESF,cAAc,CAACuB,MAAM,CAAClC,OAAP,CAAeH,IAAhB,CAFvB,MAGSqC,MAAM,CAAClC,OAAP,CAAeF,MAHxB,IAKIoC,MAAM,CAAClC,OAAP,CAAeF;AAZvB,eAFM;AAHV;AAqBD;;AAED,iBAAO,IAAP;;AAEF,aAAK,KAAL;AAAY;AACV,kBAAMmB,KAAK,GACTiB,MAAM,CAACG,MAAP,KAAkBhB,KAAK,CAACL,GAAxB,IAA+BkB,MAAM,CAACC,MAAtC,GACId,KAAK,CAACH,MAAN,CAAaY,SAAb,CAAuBC,CAAC,IAAIA,CAAC,CAACf,GAAF,KAAUkB,MAAM,CAACC,MAA7C,CADJ,GAEId,KAAK,CAACJ,KAHZ;;AAKA,gBAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,oBAAMd,KAAK,GAAGwB,IAAI,CAACW,GAAL,CAASrB,KAAK,GAAGiB,MAAM,CAAClC,OAAP,CAAeG,KAAvB,GAA+B,CAAxC,EAA2C,CAA3C,CAAd;AACA,oBAAMe,MAAM,GAAGG,KAAK,CAACH,MAAN,CACZc,KADY,CACN,CADM,EACH7B,KADG,EAEZoC,MAFY,CAELlB,KAAK,CAACH,MAAN,CAAac,KAAb,CAAmBf,KAAK,GAAG,CAA3B,CAFK,CAAf;AAIA,uCACKI,KADL;AAEEJ,gBAAAA,KAAK,EAAEC,MAAM,CAACO,MAAP,GAAgB,CAFzB;AAGEP,gBAAAA;AAHF;AAKD;;AAED,mBAAO,IAAP;AACD;;AAED,aAAK,YAAL;AACE,iBAAOX,MAAM,CAAC0B,iBAAP,CACLZ,KADK,EAEL;AACEtB,YAAAA,IAAI,EAAE,KADR;AAEEC,YAAAA,OAAO,EAAE;AAAEG,cAAAA,KAAK,EAAEkB,KAAK,CAACH,MAAN,CAAaO,MAAb,GAAsB;AAA/B;AAFX,WAFK,EAMLnB,OANK,CAAP;;AASF,aAAK,UAAL;AACE,cACE4B,MAAM,CAAClC,OAAP,CAAegB,GAAf,IACCkB,MAAM,CAAClC,OAAP,CAAeH,IAAf,IACCwB,KAAK,CAACX,UAAN,CAAiBI,QAAjB,CAA0BoB,MAAM,CAAClC,OAAP,CAAeH,IAAzC,CAHJ,EAIE;AACA;AACA,gBAAIoB,KAAK,GAAG,CAAC,CAAb;;AAEA,gBACGI,KAAK,CAACH,MAAN,CAAaG,KAAK,CAACJ,KAAnB,EAA0BpB,IAA1B,KAAmCqC,MAAM,CAAClC,OAAP,CAAeH,IAAlD,IACCqC,MAAM,CAAClC,OAAP,CAAegB,GAAf,KAAuBH,SADzB,IAEAQ,KAAK,CAACH,MAAN,CAAaG,KAAK,CAACJ,KAAnB,EAA0BD,GAA1B,KAAkCkB,MAAM,CAAClC,OAAP,CAAegB,GAHnD,EAIE;AACAC,cAAAA,KAAK,GAAGI,KAAK,CAACJ,KAAd;AACD,aAND,MAMO;AACL,mBAAK,IAAImB,CAAC,GAAGf,KAAK,CAACH,MAAN,CAAaO,MAAb,GAAsB,CAAnC,EAAsCW,CAAC,IAAI,CAA3C,EAA8CA,CAAC,EAA/C,EAAmD;AACjD,oBACGf,KAAK,CAACH,MAAN,CAAakB,CAAb,EAAgBvC,IAAhB,KAAyBqC,MAAM,CAAClC,OAAP,CAAeH,IAAxC,IACCqC,MAAM,CAAClC,OAAP,CAAegB,GAAf,KAAuBH,SADzB,IAEAQ,KAAK,CAACH,MAAN,CAAakB,CAAb,EAAgBpB,GAAhB,KAAwBkB,MAAM,CAAClC,OAAP,CAAegB,GAHzC,EAIE;AACAC,kBAAAA,KAAK,GAAGmB,CAAR;AACA;AACD;AACF;AACF;;AAED,gBACEnB,KAAK,KAAK,CAAC,CAAX,IACAiB,MAAM,CAAClC,OAAP,CAAegB,GADf,IAEAkB,MAAM,CAAClC,OAAP,CAAeH,IAAf,KAAwBgB,SAH1B,EAIE;AACA,qBAAO,IAAP;AACD;;AAED,gBAAII,KAAK,KAAK,CAAC,CAAX,IAAgBiB,MAAM,CAAClC,OAAP,CAAeH,IAAf,KAAwBgB,SAA5C,EAAuD;AACrD,qBAAON,MAAM,CAAC0B,iBAAP,CACLZ,KADK,EAEL;AACEtB,gBAAAA,IAAI,EAAE,MADR;AAEEC,gBAAAA,OAAO,EAAE;AACPgB,kBAAAA,GAAG,EAAEkB,MAAM,CAAClC,OAAP,CAAegB,GADb;AAEPnB,kBAAAA,IAAI,EAAEqC,MAAM,CAAClC,OAAP,CAAeH,IAFd;AAGPC,kBAAAA,MAAM,EAAEoC,MAAM,CAAClC,OAAP,CAAeF;AAHhB;AAFX,eAFK,EAULQ,OAVK,CAAP;AAYD;;AAED,qCACKe,KADL;AAEEJ,cAAAA,KAFF;AAGEC,cAAAA,MAAM,EAAE,CACN,GAAGG,KAAK,CAACH,MAAN,CAAac,KAAb,CAAmB,CAAnB,EAAsBf,KAAtB,CADG,EAENiB,MAAM,CAAClC,OAAP,CAAeF,MAAf,KAA0Be,SAA1B,qBAESQ,KAAK,CAACH,MAAN,CAAaD,KAAb,CAFT;AAGMnB,gBAAAA,MAAM,oBACDuB,KAAK,CAACH,MAAN,CAAaD,KAAb,EAAoBnB,MADnB,MAEDoC,MAAM,CAAClC,OAAP,CAAeF,MAFd;AAHZ,mBAQIuB,KAAK,CAACH,MAAN,CAAaD,KAAb,CAVE;AAHV;AAgBD;;AAED,iBAAO,IAAP;;AAEF,aAAK,SAAL;AACE,cAAII,KAAK,CAACJ,KAAN,GAAc,CAAlB,EAAqB;AACnB,mBAAOV,MAAM,CAAC0B,iBAAP,CACLZ,KADK,EAEL;AACEtB,cAAAA,IAAI,EAAE,KADR;AAEEC,cAAAA,OAAO,EAAE;AAAEG,gBAAAA,KAAK,EAAE;AAAT,eAFX;AAGEkC,cAAAA,MAAM,EAAEH,MAAM,CAACG,MAHjB;AAIEF,cAAAA,MAAM,EAAED,MAAM,CAACC;AAJjB,aAFK,EAQL7B,OARK,CAAP;AAUD;;AAED,iBAAO,IAAP;;AAEF;AACE,iBAAOE,oBAAWyB,iBAAX,CAA6BZ,KAA7B,EAAoCa,MAApC,CAAP;AAvLJ;AAyLD,KAhTF;;AAkTCM,IAAAA,cAAc,EAAE7C;AAlTjB,IAHD;;AAwTA,SAAOY,MAAP;AACD","sourcesContent":["import shortid from 'shortid';\nimport BaseRouter from './BaseRouter';\nimport {\n  NavigationState,\n  CommonNavigationAction,\n  Router,\n  DefaultRouterOptions,\n  Route,\n} from './types';\n\nexport type StackActionType =\n  | {\n      type: 'REPLACE';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'PUSH';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP';\n      payload: { count: number };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP_TO_TOP';\n      source?: string;\n      target?: string;\n    };\n\nexport type StackRouterOptions = DefaultRouterOptions;\n\nexport type StackNavigationState = NavigationState & {\n  /**\n   * Type of the router, in this case, it's stack.\n   */\n  type: 'stack';\n};\n\nexport const StackActions = {\n  replace(name: string, params?: object): StackActionType {\n    return { type: 'REPLACE', payload: { name, params } };\n  },\n  push(name: string, params?: object): StackActionType {\n    return { type: 'PUSH', payload: { name, params } };\n  },\n  pop(count: number = 1): StackActionType {\n    return { type: 'POP', payload: { count } };\n  },\n  popToTop(): StackActionType {\n    return { type: 'POP_TO_TOP' };\n  },\n};\n\nexport default function StackRouter(options: StackRouterOptions) {\n  const router: Router<\n    StackNavigationState,\n    CommonNavigationAction | StackActionType\n  > = {\n    ...BaseRouter,\n\n    type: 'stack',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const initialRouteName =\n        options.initialRouteName !== undefined &&\n        routeNames.includes(options.initialRouteName)\n          ? options.initialRouteName\n          : routeNames[0];\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${shortid()}`,\n        index: 0,\n        routeNames,\n        routes: [\n          {\n            key: `${initialRouteName}-${shortid()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName],\n          },\n        ],\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = state.routes\n        .filter(route => routeNames.includes(route.name))\n        .map(\n          route =>\n            ({\n              ...route,\n              key: route.key || `${route.name}-${shortid()}`,\n              params:\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                    }\n                  : route.params,\n            } as Route<string>)\n        );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${shortid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${shortid()}`,\n        index: routes.length - 1,\n        routeNames,\n        routes,\n      };\n    },\n\n    getStateForRouteNamesChange(state, { routeNames, routeParamList }) {\n      const routes = state.routes.filter(route =>\n        routeNames.includes(route.name)\n      );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined &&\n          routeNames.includes(options.initialRouteName)\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${shortid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index: Math.min(state.index, routes.length - 1),\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex(r => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return {\n        ...state,\n        index,\n        routes: state.routes.slice(0, index + 1),\n      };\n    },\n\n    getStateForAction(state, action, options) {\n      const { routeParamList } = options;\n\n      switch (action.type) {\n        case 'REPLACE': {\n          const index = action.source\n            ? state.routes.findIndex(r => r.key === action.source)\n            : state.index;\n\n          if (index === -1) {\n            return null;\n          }\n\n          const { name, key, params } = action.payload;\n\n          if (!state.routeNames.includes(name)) {\n            return null;\n          }\n\n          return {\n            ...state,\n            routes: state.routes.map((route, i) =>\n              i === index\n                ? {\n                    key: key !== undefined ? key : `${name}-${shortid()}`,\n                    name,\n                    params:\n                      routeParamList[name] !== undefined\n                        ? {\n                            ...routeParamList[name],\n                            ...params,\n                          }\n                        : params,\n                  }\n                : route\n            ),\n          };\n        }\n\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            return {\n              ...state,\n              index: state.index + 1,\n              routes: [\n                ...state.routes,\n                {\n                  key:\n                    action.payload.key === undefined\n                      ? `${action.payload.name}-${shortid()}`\n                      : action.payload.key,\n                  name: action.payload.name,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ],\n            };\n          }\n\n          return null;\n\n        case 'POP': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex(r => r.key === action.source)\n              : state.index;\n\n          if (index > 0) {\n            const count = Math.max(index - action.payload.count + 1, 1);\n            const routes = state.routes\n              .slice(0, count)\n              .concat(state.routes.slice(index + 1));\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n        }\n\n        case 'POP_TO_TOP':\n          return router.getStateForAction(\n            state,\n            {\n              type: 'POP',\n              payload: { count: state.routes.length - 1 },\n            },\n            options\n          );\n\n        case 'NAVIGATE':\n          if (\n            action.payload.key ||\n            (action.payload.name &&\n              state.routeNames.includes(action.payload.name))\n          ) {\n            // If the route already exists, navigate to that\n            let index = -1;\n\n            if (\n              (state.routes[state.index].name === action.payload.name &&\n                action.payload.key === undefined) ||\n              state.routes[state.index].key === action.payload.key\n            ) {\n              index = state.index;\n            } else {\n              for (let i = state.routes.length - 1; i >= 0; i--) {\n                if (\n                  (state.routes[i].name === action.payload.name &&\n                    action.payload.key === undefined) ||\n                  state.routes[i].key === action.payload.key\n                ) {\n                  index = i;\n                  break;\n                }\n              }\n            }\n\n            if (\n              index === -1 &&\n              action.payload.key &&\n              action.payload.name === undefined\n            ) {\n              return null;\n            }\n\n            if (index === -1 && action.payload.name !== undefined) {\n              return router.getStateForAction(\n                state,\n                {\n                  type: 'PUSH',\n                  payload: {\n                    key: action.payload.key,\n                    name: action.payload.name,\n                    params: action.payload.params,\n                  },\n                },\n                options\n              );\n            }\n\n            return {\n              ...state,\n              index,\n              routes: [\n                ...state.routes.slice(0, index),\n                action.payload.params !== undefined\n                  ? {\n                      ...state.routes[index],\n                      params: {\n                        ...state.routes[index].params,\n                        ...action.payload.params,\n                      },\n                    }\n                  : state.routes[index],\n              ],\n            };\n          }\n\n          return null;\n\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(\n              state,\n              {\n                type: 'POP',\n                payload: { count: 1 },\n                target: action.target,\n                source: action.source,\n              },\n              options\n            );\n          }\n\n          return null;\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    actionCreators: StackActions,\n  };\n\n  return router;\n}\n"]}